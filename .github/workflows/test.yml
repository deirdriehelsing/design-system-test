name: Test

on:
  pull_request:
  workflow_call:
    secrets:
      GEMFURY_TOKEN:
        required: true
      VT_GITHUB_TOKEN:
        required: true

env:
  GEMFURY_TOKEN: ${{ secrets.GEMFURY_TOKEN }}
  NODE_OPTIONS: "--max_old_space_size=4096"
  VT_GITHUB_TOKEN: ${{ secrets.VT_GITHUB_TOKEN }}

jobs:
  setup-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: .nvmrc
          cache: yarn

  test:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4.0.0
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install Dependencies
        run: yarn setup

      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v2

      - name: Test
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn jest --clear-cache && yarn test-ci --shard=${{ matrix.shard }}/${{ strategy.job-total }} --maxWorkers=${{ steps.cpu-cores.outputs.count }}

      - name: Move Code Coverage
        run: |
          mkdir -p docs/coverage/reports
          mv docs/coverage/coverage-final.json docs/coverage/reports/coverage-shard-${{ matrix.shard }}.json
          mv docs/coverage/lcov.info docs/coverage/reports/${{ matrix.shard }}.lcov.info

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts-${{ matrix.shard }}
          path: docs/coverage/reports/

  report-coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: docs/coverage/reports
          pattern: coverage-artifacts-*
          merge-multiple: true

      - name: Merge Code Coverage
        run: |
          npx nyc merge docs/coverage/reports coverage-final.json && mv coverage-final.json docs/coverage/reports

      - name: Check Results
        run: |
          npx nyc check-coverage --functions 80 --statements 85 -t docs/coverage/reports